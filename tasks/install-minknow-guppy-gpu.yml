- name: Install minion-nc
  package:
    name: minion-nc
    state: present

- name: "Ensure {{ ont_guppy_gpu_dir }} exists"
  file:
    path: "{{ ont_guppy_gpu_dir }}"
    state: directory
    mode: 0755

- name: "Check whether guppy GPU seems to be already installed"
  stat:
    path: "{{ ont_guppy_gpu_dir }}/ont-guppy/bin/guppy_basecall_server"
  register: guppy_installed

- name: Identify guppy version
  shell:
    cmd: "/usr/bin/guppy_basecall_server --version | grep -o 'Version [0-9.]*' | grep -o '[0-9.]*'"
  register: guppy_ver
  changed_when: false

- name: Check whether guppy GPU tarball already exists
  stat:
    path: "{{ ont_guppy_gpu_dir }}/ont-guppy_{{ guppy_ver.stdout }}_linux64.tar.gz"
  register: guppy_tarball
  when: not guppy_installed.stat.exists

- name: Download guppy GPU tarball
  get_url:
    url: "https://mirror.oxfordnanoportal.com/software/analysis/ont-guppy_{{ guppy_ver.stdout }}_linux64.tar.gz"
    dest: "{{ ont_guppy_gpu_dir }}"
  when: not guppy_installed.stat.exists and not guppy_tarball.stat.exists

- name: Extract guppy GPU tarball
  unarchive:
    src: "{{ ont_guppy_gpu_dir }}/ont-guppy_{{ guppy_ver.stdout }}_linux64.tar.gz"
    remote_src: true
    dest: "{{ ont_guppy_gpu_dir }}/"
  when: not guppy_installed.stat.exists

- name: Copy guppyd.service file
  template:
    src: guppyd.service.j2
    dest: /etc/systemd/system/guppyd.service
    mode: 0644
    backup: true
  notify: Reload and restart guppy and minknow services

- name: Create symlinks to binaries
  file:
    src: "{{ ont_guppy_gpu_dir }}/ont-guppy/bin/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    state: link
  with_items:
    - autoconfigure_guppy_server.py
    - bam_convert
    - guppy_aligner
    - guppy_barcoder
    - guppy_basecall_client
    - guppy_basecaller
    - guppy_basecaller_duplex
    - guppy_basecaller_supervisor
    - guppy_basecall_server
    - minimap2
